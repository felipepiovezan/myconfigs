# moves .cache directory from your home to data directory since Intel home directory is only 50MB
export XDG_CACHE_HOME="$HOTEL/.cache"

export PS1="\w \\$ "
# custom prompt; visit http://ezprompt.net for a visual guide

export PS2="> "
# this prompt is used when an incomplete command is entered

# the follow lines must be included
# Setup ARC Environment
if [ -f /p/psg/ctools/arc/arc.bashrc ]; then
   . /p/psg/ctools/arc/arc.bashrc
fi

## ACL development shortcuts.
if [ -n $ACDS_SRC_ROOT ]; then
  export PATH=$PATH:$ACDS_SRC_ROOT/regtest/hld/util/
  export TRANSFORMS=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Transforms/FPGATransforms/
  export transforms=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Transforms/FPGATransforms/
  export ANALYSIS=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Analysis/FPGAAnalysis/
  export analysis=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Analysis/FPGAAnalysis/
  export INCANALYSIS=$ACDS_SRC_ROOT/acl/llvm-project/llvm/include/llvm/Analysis/FPGAAnalysis/
  export incanalysis=$ACDS_SRC_ROOT/acl/llvm-project/llvm/include/llvm/Analysis/FPGAAnalysis/
  export TARGET=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Target/FPGA/FPGATargetMachine.cpp
  export target=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/Target/FPGA/FPGATargetMachine.cpp
  export LIB=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/
  export lib=$ACDS_SRC_ROOT/acl/llvm-project/llvm/lib/
  export LIT=$ACDS_SRC_ROOT/acl/llvm-project/llvm/test/Transforms/FPGATransforms/
  export lit=$ACDS_SRC_ROOT/acl/llvm-project/llvm/test/Transforms/FPGATransforms/
  export REGTEST=$ACDS_SRC_ROOT/regtest/
  export regtest=$ACDS_SRC_ROOT/regtest/
  export OWNERS=$ACDS_SRC_ROOT/depot/hld/hldutil/main/data/code_owners.xml
  export owners=$ACDS_SRC_ROOT/depot/hld/hldutil/main/data/code_owners.xml
  alias lit='aocl-lit -vvv o'
  function clean {
    echo cleaning with `which aocl-opt`;
    for var in "$@"
    do
      echo cleaning $var
      aocl-opt -S -strip-debug -strip-dead-prototypes $var -o $var
    done
  }
  function cheatall() { make -C $acl cheat-all; }
  function llvm() { make -C $acl llvm-install; }
fi

################################## Shortcuts
export LOCAL=/build/fdeazeve/
export bl=$LOCAL/acl_builds/
export DATA=/p/psg/swip/w/fdeazeve
export data=$DATA
export b=$data/builds/
export acl=$ACDS_SRC_ROOT/acl

################################# Custom software
export NETWORK_SOFTWARE_INSTALL_POSTPATH=$DATA/software/install_postpath
export NETWORK_SOFTWARE_INSTALL_PREPATH=$DATA/software/install_prepath
export PATH=$NETWORK_SOFTWARE_INSTALL_PREPATH/bin:$PATH:$NETWORK_SOFTWARE_INSTALL_POSTPATH/bin
export LD_LIBRARY_PATH=$NETWORK_SOFTWARE_INSTALL_PREPATH/lib:$LD_LIBRARY_PATH:$NETWORK_SOFTWARE_INSTALL_POSTPATH/lib

################################# Custom auto-completion
source $DATA/acl_bash_completion/aocl-opt.sh
source $DATA/acl_bash_completion/reg_exe.sh
source $DATA/acl_bash_completion/p4.sh

################################# Disable box asking for password in git commands.
unset SSH_ASKPASS

################################# Fix manpages.
if [[ "${MANPATH: -1}" != ":" ]]; then
  export MANPATH="$MANPATH:"
fi

################################# QShell
function sync_to_latest() { QUIET=1 make -C $ACLTEST_ROOT/../../p4/acl/bcommon/ sync_to_latest; }
#function sync_to_build() { QUIET=1 make -C $ACLTEST_ROOT/../../p4/acl/bcommon/ sync_to_build; }
function sync() { sync_to_latest; }
function sync_regtest() { QUIET=1 make -C $ACLTEST_ROOT/../../p4/acl/bcommon/ sync_regtest; }
#function qnew() { qshell2 hldkit/20.3 --acl --copy acds/20.1/156; }
#function qenter() { qshell2 acdskit/20.1/156; }
function qnew() { qshell2 --acl --copy hldkit; }
function qenter() { qshell2; }

################################ Getting builds
function gettrunk() { arc shell acltest/20.3,acds/20.3,modelsim_se,modelsim_se-lic; }
function get191() { arc shell devacds/19.1,acltest/19.1,acds/19.1,testutils,regutils; }
function get193() { arc shell devacds/19.3,acltest/19.3,acds/19.3,testutils,regutils; }
function getdebug() { arc shell acltest/todebug,gdb/8.3,; }
function getsycl() { arc shell aclsycl,sycl/[qualified=1],tbb,acds/p/psg/data/sys_dla/acds/acds_17_1_1_with_patch_1_38,gcc/7.4.0/2,adapt/18.0.1/185,python/2.7.13,aclboardpkg/intel_a10gx_pac/1.2a,ninja,cmake; }
function getsyclnoacl() { arc shell sycl/[qualified=1],tbb,acds/p/psg/data/sys_dla/acds/acds_17_1_1_with_patch_1_38,gcc/7.4.0/2,adapt/18.0.1/185,python/2.7.13,aclboardpkg/intel_a10gx_pac/1.2a,ninja,cmake; }
function getemu() { arc shell ssg_opencl_emulator_env ; }

################################ SYCL
function syclrtl() { dpcpp --gcc-toolchain=$GCC_ROOTDIR -fintelfpga -Xshardware -fsycl-link -Xsv -Xsv -Xssave-temps $@; }

################################ Arc cheating
function poorfarm { arc job-query user=fdeazeve status=queued priority=$1 | arc job - priority=$2; }
function poorfarmjob { arc job-query parent=$1 | arc job - priority=$2; }
function resources {
  local resources=`arc job | grep resources`;
  local remove_str='*resources : ';
  echo ${resources#$remove_str};
}

################################ P4
function mychanges { p4 changes --me -c $P4CLIENT -s pending; }
